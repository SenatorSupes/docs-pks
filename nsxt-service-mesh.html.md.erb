---
title: Configuring VMware Tanzu Service Mesh by VMware NSX
owner: TKGI
---

This topic describes how to integrate <%= vars.product_full %> with VMware Tanzu Service Mesh by VMware NSX.

Tanzu Service Mesh brings application-layer visibility, control, and security to microservices deployed on <%= vars.product_full %>-managed Kubernetes clusters.

## <a id='about'></a> About VMware Tanzu Service Mesh by VMware NSX

VMware Tanzu Service Mesh provides a service mesh solution for Kubernetes based on the NSX platform.
Tanzu Service Mesh gives Kubernetes cluster users API-level visibility, control, and security over their clusters' services, data, and users.

In a Kubernetes cluster, Tanzu Service Mesh runs as a pod and is deployed using a YAML file.

For more information, see [NSX Service Mesh on VMware Tanzu: CONNECT & PROTECT Applications Across Your Kubernetes Clusters and Clouds](https://blogs.vmware.com/networkvirtualization/2019/11/nsx-service-mesh-on-vmware-tanzu.html/) in the VMware _Network Virtualization_ blog.

## <a id='prerequisites'></a> Prerequisites

These instructions assume that:

* You have deployed <%= vars.product_full %>.

* You have provisioned a target Kubernetes cluster for Tanzu Service Mesh.

* You have an account with VMware Cloud Services.  If you do not already have an account, register as follows:
  1. Contact your Sales contact, or send an email to [driggs@vmware.com](mailto:driggs@vmware.com).
  1. Complete the registration process by following the emails you receive.

## <a id='install'></a> Install VMware Tanzu Service Mesh in a Cluster

Install VMware Tanzu Service Mesh in a cluster as follows:

1. [Add the Tanzu Service Mesh Service](#add-service)
1. [Onboard a Kubernetes Cluster to Tanzu Service Mesh](#onboard-cluster)
1. [Install and Configure Istio](#istio)

### <a id='add-service'></a> Add the Tanzu Service Mesh Service

1. Log in to the VMware Cloud Services console.

1. Select your organization or create a new one.
  ![VMware Cloud Services console](images/vsphere/nsx-sm-01-create-org.jpg)

1. Select the Tanzu Service Mesh service offering and add your account to the service.

### <a id='onboard-cluster'></a> Onboard a Kubernetes Cluster to Tanzu Service Mesh

Complete the following steps to install Tanzu Service Mesh onto a <%= vars.k8s_runtime_abbr %>-provisioned Kubernetes cluster.

1. Sign in to the VMware Tanzu Service Mesh by VMware NSX console.

1. At upper-left, click **ADD NEW...** > **Onboard New Cluster...**.
  ![Tanzu Service Mesh console](images/vsphere/nsx-sm-02-onboard-cluster.png)

1. At the **Onboard Clusters** screen, enter a name for Tanzu Service Mesh to use to identify the target cluster.
  - It is recommended that you enter the name of the cluster used in <%= vars.k8s_runtime_abbr %>, but it can be a different name.
  - The cluster name must be unique within Tanzu Service Mesh.
  ![Tanzu Service Mesh Enter Cluster Name and Generate Token](images/vsphere/nsx-sm-03-generate-token.png)

1. Click **GENERATE SECURITY TOKEN**

1. From the **Onboard Clusters** pane, click the copy icon to copy the `kubectl apply` command that applies the registration YAML file to the cluster.

1. Log in to your <%= vars.k8s_runtime_abbr %>-provisioned Kubernetes cluster.

1. Apply the registration YAML to the cluster by running the `kubectl apply` command you copied. For example:
  `kubectl apply -f https://prod-1.servicemesh.biz/cluster-registration/k8s/v0.8.5/k8s-registration.yaml`
  ![Apply the registration YAML to the cluster](images/vsphere/nsx-sm-04-reg-yaml.png)

1. From the **Onboard Clusters** pane, click the copy icon to copy the `kubectl create secret` command that establishes a secure connection with NSX Service Mesh.

1. From your cluster, run the `kubectl create secret` command you copied.  For example
  `kubectl -n allspark create secret generic cluster-token --from-literal=token=eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.xxxxxxxxxxxx`

1. Click the green **INSTALL NSX SERVICE MESH** button to install Tanzu Service Mesh on the cluster.
  ![Tanzu Service Mesh Enter Cluster Name and Generate Token](images/vsphere/nsx-sm-05-install-sm-button.jpg)

1. The YAML file deploys a pod to the target Kubernetes cluster that includes the Tanzu Service Mesh agent.
  - If the target cluster is not discovered, click **EXIT AND RELOAD** and try again.
  ![Tanzu Service Mesh Enter Cluster Name and Generate Token](images/vsphere/nsx-sm-06-nodetect-cluster.jpg)

### <a id='istio'></a> Install and Configure Istio

Once the Tanzu Service Mesh agent is correctly started on a cluster:

1. Return to the Tanzu Service Mesh console and complete the on-boarding process by clicking on the **Install ISTIO** button in the on-boarding menu.
  - This operation installs the Istio components on the target cluster,
  including the Istio CNI plugin that lets Istio automatically inject its Envoy sidecar container whenever a new pod is started.

After you have onboarded clusters to Tanzu Service Mesh and installed Istio, they should appear in your Tanzu Service Mesh console:

  ![Tanzu Service Mesh console showing installed clusters](images/vsphere/nsx-sm-07-clusters-installed.png)

## <a id='issue'></a> Known Issue: Timeout

When the `tkgi delete cluster` command is issued, the system runs an errand to clean up the pods currently running in the cluster.
Istio installs a few pods that have a Pod Disruption Budget that conflict with the Tanzu Kubernetes Grid Integrated Edition cleanup errand.
This means that the errand runs for a long time.

<%= vars.product_short %> allows the user to select a timeout for Pod Disruption Budget, and the errand runs up to that timeout.

**Workaround**

To avoid this problem, try to remove the on-boarded cluster as follows:

1. Log on to the Tanzu Service Mesh console and click on the name of cluster you want to remove.

1. Near the top right corner click **REMOVE CLUSTER**.
  - If this operation is successful, you can safely delete the cluster with the `tkgi delete-cluster` command.
  - If the operation is not successful, run the following command on the cluster before attempting to delete it with `tkgi delete-cluster`:
    - `kubectl delete namespace istio-system`
